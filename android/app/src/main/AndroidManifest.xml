<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.shifen.things">

    <!-- 联网 -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- 使用存储卡 -->
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.GET_TASKS" />
    <!-- Html5Plus runtime基础权限   end -->

    <!-- Audio begin -->
    <!-- 访问录音设备 -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <!-- 修改播放声音通道 -->
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
    <!-- Audio end -->

    <!-- Camera  begin -->
    <!-- 调用摄像头 -->
    <uses-permission android:name="android.permission.CAMERA" />

    <uses-feature android:name="android.hardware.camera" />
    <!-- Camera  end -->

    <!-- Contacts  begin -->
    <!-- 访问联系人 -->
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.WRITE_CONTACTS" />
    <uses-permission android:name="android.permission.READ_CONTACTS" />
    <!-- Contacts  end -->

    <!-- Device begin -->
    <!-- 屏幕保持唤醒 不锁屏  plus.device.setWakelock();plus.device.isWakelock(); -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- 震动 权限 plus.device.vibrate(); -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <!-- 拨打电话 plus.device.dail(); -->
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <!-- 访问网络状态 plus.networkinfo.* -->
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <!-- 读写手机状态和身份 plus.devices.* -->
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <!-- Device end -->

    <!-- io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here. -->
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:label="智能家居"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- This keeps the window background of the activity showing
                 until Flutter renders its first frame. It can be removed if
                 there is no splash screen (such as the default splash screen
                 defined in @style/LaunchTheme). -->
            <meta-data
                android:name="io.flutter.app.android.SplashScreenUntilFirstFrame"
                android:value="true" />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>
